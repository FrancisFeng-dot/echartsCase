var parDeptId = ac.deptId;//--------------------------- 头部五个趋势图加载  STATR -------------------------------------------//初始化 chart数据 var containerCar = null;var containerDriver = null;var containerFault = null;var containerMileage = null;var containerIgnition = null;//暂存比例图数据var containerCarCategories = null;var containerDriverCategories = null;var containerFaultCategories = null;var containerMileageCategories = null;var containerIgnitionCategories = null;//暂存分析图数据var containerCarData = null;var containerDriverData = null;var containerFaultData = null;var containerMileageData = null;var containerIgnitionData = null;function loadTopLinearChartData(tabName){	var queryDay = $("#queryDay").val();	var deptId = $("#deptId").val();		var text = '';	var show = '';	var topLine = '';	if("car" == tabName){		topLine = '#containerCar';		text = '片区车辆发展趋势';		show = '辆';			}else if("driver" == tabName){		topLine = '#containerDriver';		text = '片区驾驶员发展趋势';		show = '人';			}else if("fault" == tabName){		topLine = '#containerFault';		text = '片区车辆故障趋势';		show = '辆';			}else if("mileage" == tabName){		topLine = '#containerMileage';		text = '片区日均里程趋势';		show = 'km';			}else if("ignition" == tabName){		topLine = '#containerIgnition';		text = '片区日均点火时长趋势';		show = '小时';	}		//初始化 趋势图	$(topLine).highcharts({			chart : {				type : 'line'			},			title : {				text : ''			},			xAxis : {				categories : [],				labels : {					rotation : -45,					align : 'right',					style : {						fontSize : '12px',						fontFamily : 'Verdana, sans-serif'					}				}			},			yAxis : {				min:0, // 定义最小值  				title : {					text : show				}			},			tooltip : {				valueSuffix : show			},			series : []	});	var urls = "";	//加载图表数据	if("car" == tabName){		urls = "containerCarLinear.do";		containerCar = $('#containerCar').highcharts();		}else if("driver" == tabName){		urls = "containerDriverLinear.do";		containerDriver = $('#containerDriver').highcharts();			}else if("fault" == tabName){		urls = "containerFaultLinear.do";		containerFault = $('#containerFault').highcharts();			}else if("mileage" == tabName){		urls = "containerMileageLinear.do";		containerMileage = $('#containerMileage').highcharts();			}else if("ignition" == tabName){		urls = "containerIgnitionLinear.do";		containerIgnition = $('#containerIgnition').highcharts();			}		$.ajax({		"type" : 'post',		"url" : ctx+ '/topicAnalysis/safetyAnalysis/'+urls,		"dataType" : "json",		"data" : {			deptId : deptId,			queryDay : queryDay		},		"success" : function(resp) {						if("car" == tabName){				containerCarCategories = resp["containerCar"]["categories"];				containerCarData = resp["containerCar"]["data"];			}else if("driver" == tabName){				containerDriverCategories = resp["containerDriver"]["categories"];				containerDriverData = resp["containerDriver"]["data"];			}else if("fault" == tabName){				containerFaultCategories = resp["containerFault"]["categories"];				containerFaultData = resp["containerFault"]["data"];			}else if("mileage" == tabName){				containerMileageCategories = resp["containerMileage"]["categories"];				containerMileageData = resp["containerMileage"]["data"];			}else if("ignition" == tabName){				containerIgnitionCategories = resp["containerIgnition"]["categories"];				containerIgnitionData = resp["containerIgnition"]["data"];				}			createTopLinearChart(tabName);					}	});}//构造图表 头部五个趋势图加载function createTopLinearChart(tabName) {	if("car" == tabName){				if ( containerCarData.length > 2 ) {			containerCar.setTitle( {text: '片区车辆发展趋势' });			//更新趋势图数据			var feeTendencySeries = eval(containerCarData);			clearChart(containerCar);			$.each(feeTendencySeries, function(n, value) {				containerCar.addSeries(value, false);			});			containerCar.xAxis[0].setCategories(eval(containerCarCategories),true);		}else{			containerCar.setTitle( {text: '暂无数据' });		}			}else if("driver" == tabName){				if ( containerDriverData.length > 2 ) {			containerDriver.setTitle( {text: '片区驾驶员发展趋势' });			//更新趋势图数据			var feeTendencySeries = eval(containerDriverData);			clearChart(containerDriver);			$.each(feeTendencySeries, function(n, value) {				containerDriver.addSeries(value, false);			});			containerDriver.xAxis[0].setCategories(eval(containerDriverCategories),true);		}else{			containerDriver.setTitle( {text: '暂无数据' });		}			}else if("fault" == tabName){				if ( containerFaultData.length > 2 ) {			containerFault.setTitle( {text: '片区车辆故障趋势' });			//更新趋势图数据			var feeTendencySeries = eval(containerFaultData);			clearChart(containerFault);			$.each(feeTendencySeries, function(n, value) {				containerFault.addSeries(value, false);			});			containerFault.xAxis[0].setCategories(eval(containerFaultCategories),true);		}else{			containerFault.setTitle( {text: '暂无数据' });		}			}else if("mileage" == tabName){				if (containerMileageData.length > 2 ) {			containerMileage.setTitle( {text: '片区日均里程趋势' }); 			//更新趋势图数据			var feeTendencySeries = eval(containerMileageData);			clearChart(containerMileage);			$.each(feeTendencySeries, function(n, value) {				containerMileage.addSeries(value, false);			});			containerMileage.xAxis[0].setCategories(eval(containerMileageCategories),true);		}else{			containerMileage.setTitle( {text: '暂无数据' });		}			}else if("ignition" == tabName){				if ( containerIgnitionData.length > 2 ) {			containerIgnition.setTitle( {text: '片区日均点火时长趋势' });			//更新趋势图数据			var feeTendencySeries = eval(containerIgnitionData);			clearChart(containerIgnition);			$.each(feeTendencySeries, function(n, value) {				containerIgnition.addSeries(value, false);			});			containerIgnition.xAxis[0].setCategories(eval(containerIgnitionCategories),true);		}else{			containerIgnition.setTitle( {text: '暂无数据' });		}			}	} //--------------------------- 头部五个趋势图加载  END -------------------------------------------//清理原有图层function clearChart(chart) {	var series = chart.series;	while (series.length > 0) {		series[0].remove(false);	}}/** * 打开tab页 * @param name * @param url */function openTab(name, url) {	window.parent.$.fn.jerichoTab.addTab({		tabFirer : null,		title : name,		closeable : true,		data : {			dataType : 'iframe',			dataLink : url		}	}).showLoader().loadData();	resizeTab();} 