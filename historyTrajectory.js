//获取时间段内的GPS数据var getGpsUrl = 'http://office.che-mi.net:64109/data/getGpsByTime.do';//设置全局仪表盘变量var speedChart;$(function () {    //初始化地图    initMap();    //格式化    main_dateFormat();    //初始化车速仪表盘    initSpeedChart();    //转速盘隐藏事件    hideSpeed();    //转速盘显示事件    showSpeed();    //默认选择某天    layui.use('laydate', function() {        var laydate = layui.laydate;        laydate.render({            elem: '#beginTime',type: 'datetime',format: 'yyyy-M-d H:m'        });    });    //默认选择某天    layui.use('laydate', function() {        var laydate = layui.laydate;        laydate.render({            elem: '#endTime',type: 'datetime',format: 'yyyy-M-d H:m'        });    });    //导出轨迹点    $("#exportPoint").click(function () {        var travelId = $("#selected_travelId").val();        if (!travelId) {            alertMessage("没有行程轨迹", 0);            return;        }        var url = $(this).attr("rel_url");        url = url + '?travelId=' + travelId;        window.location.href = url;        var intervalId = setInterval(function () {            if (travelId != '') {                $.ajax({                    type: "post",                    data: {"travelId": travelId},                    dataType: "json",                    url: ctx + "/resourcesManage/historyTrajectory/process.do",                    success: function (data) {                        var currentLine = data.currentLine;                        var totalLine = data.totalLine;                        if (totalLine != 0) {                            progress(currentLine, totalLine);                            if (currentLine == totalLine) {                                clearInterval(intervalId);                                $(".loadbg").hide();                                $(".load").hide();                            }                        }                    },                    error: function (data) {                        clearInterval(intervalId);                        console.log("导出失败，请联系管理员");                    }                })            }        }, 200)    });    function progress(num, totalNum) {        $('.bar').parent().children("h3").text('正在生成文件');        result = (num / totalNum).toFixed(2) * 100 + "%";        $('.bar .bar_img').css("width", result);        $(".loadbg,.load").show();        $("#txt1").text(num);        $("#txt2").text(totalNum);    }    //加载行程列表    getTrajectory(false);});//初始化地图function initMap() {    var map = new BMap.Map('mapParent', {enableMapClick: false}); //在百度地图容器中创建一个地图    window.map = map;    var gc = new BMap.Geocoder();    //获取当前IP所在城市并设置中心点为该城市    var myCity = new BMap.LocalCity();    myCity.get(setCityCenter);    function setCityCenter(result) {        var cityName = result.name;        if (cityName && cityName != '') {            map.centerAndZoom(cityName, 12);        }    }    map.enableScrollWheelZoom(true);    map.addControl(new BMap.NavigationControl());    map.setMinZoom(5);    map.setMaxZoom(15);}/** * 外部链接查询指定行程 */function getTravelDetail() {    //隐藏播放条    $("#playDiv").addClass("display");    //隐藏仪表盘    $("#main_box").addClass("display");    //隐藏按钮    $("#show_speed").addClass("display");    //行程ID    var travelId = $("#selected_travelId").val();    $.ajax({        url: ctx + '/resourcesManage/historyTrajectory/getTrajectoryList.do',        type: 'POST',        data: {travelId: travelId},        dataType: 'JSON',        cache: false,        beforeSend: function () {            showPicture();        },        success: function (data) {            if (data.states == 200) {                //清除地图                map.clearOverlays();                //加载指定行程                drawingTrajectoryList(data.trajectoryList);                //默认选中                $("#behaviorListDiv").find("div.mapMonitorBoxBorder-unselect").click();            } else {                alertMessage("查询车辆轨迹信息出错，请联系管理员！", 0);            }            closePicture();        }    });}//返回车辆管理页面function returnList() {    location.href = ctx + "/resourcesManage/vehicleResources/index.do";}//点击查询获取轨迹列表function getTrajectory(isQuery) {    //当点击查询按钮时，清空被选dd中travelId    if (isQuery == true) {        $("#selected_travelId").val('');        markerList.length = 0;    }    /**汇总置零**/    $("#total_mileage").html(0);    $("#total_fuel").html(0);    $("#total_avgFuel").html(0);    $("#total_alarmCount").html(0);    $("#total_driveTime").html('00:00:00');    $("#total_avgSpeed").html(0);    /**汇总置零**/    //隐藏播放条    $("#playDiv").addClass("display");    //隐藏仪表盘    $("#main_box").addClass("display");    //隐藏按钮    $("#show_speed").addClass("display");    var vehicleId = $("#selected_vehicleId").val();    var beginTime = $("#beginTime").val();    var endTime = $("#endTime").val();    if (null == beginTime || '' == beginTime) {        alertMessage("请选择具体的开始时间！");        return;    }    if (null == endTime || '' == endTime) {        alertMessage("请选择具体的结束时间！");        return;    }    //var startDate = new Date(Date.parse(beginTime.replace(/-/g,"/")));    //var endDate = new Date(Date.parse(endTime.replace(/-/g,"/")));    var startDate = new Date(beginTime.replace(/-/g, "/"));    var endDate = new Date(endTime.replace(/-/g, "/"));    var mmSec = (endDate.getTime() - startDate.getTime()) / 3600000 / 24;    if (mmSec > 15) {        alertMessage("起止时间间隔不能大于15天！");        return;    }    $.ajax({        url: ctx + '/resourcesManage/historyTrajectory/getTrajectoryList.do',        type: 'POST',        data: {vehicleId: vehicleId, beginTime: beginTime, endTime: endTime},        dataType: 'JSON',        cache: false,        beforeSend: function () {            showPicture();        },        success: function (data) {            if (data.states == 200) {                //清除地图                map.clearOverlays();                //加载行程列表                drawingTrajectoryList(data.trajectoryList);                //如果查询的是当天                var today = new Date();                //判断是否查询当天                if (endTime.substring(0, 10) == today.format("yyyy-MM-dd")) {                    //查询未结束行程                    findUnEndTravel(vehicleId, beginTime, endTime);                } else {                    //非外部链接进来的默认选中最新的一条轨迹                    if ($("#selected_travelId").val() == '') {                        $("#behaviorListDiv" + " .mapMonitorBoxBorder-unselect").first().click();                    }                }            } else {                alertMessage("查询车辆轨迹信息出错，请联系管理员！", 0);            }            closePicture();        }    });}//加载行程列表function drawingTrajectoryList(trajectoryList) {    if (trajectoryList == null || trajectoryList.length == 0) {        var none = '<div style="height: 10%;font-size: 14px;text-align: center; padding: 5%">暂无数据</div>';        $("#behaviorListDiv").html(none);        return;    }    function getCutName(name, cutLength) {        return isNotNull(name) ? (name.length > cutLength ? name.substring(0, cutLength) + '...' : name) : '暂无';    }    var clickEventHtml = 'onclick="showRoute(\'{travel_id}\',\'{device_code}\',\'{start_time}\',\'{end_time}\');" style="cursor: pointer;" ';    var total_mileage = 0;    var total_fuel = 0;    var total_avgFuel = 0;    var total_driveTime_second = 0;    var total_alarmCount = 0;    var total_avgSpeed = 0;    /**被选中轨迹**/    var select_travelId = '';    var select_deviceCode = '';    var select_startTime = '';    var select_endTime = '';    if ($("#selected_travelId").val() != '') {        select_travelId = $("#selected_travelId").val();    }    var insertHtml = new Array();    for (var i = 0; i <= trajectoryList.length - 1; i++) {        var behavior = trajectoryList[i];        var travel_id = behavior.travel_id,            vehicle_code = behavior.vehicle_code,            driver_name = behavior.driver_name != null ? behavior.driver_name : '暂无',            device_code = behavior.device_code,            distance = behavior.distance,            fuel_consum_total = behavior.fuel_consum_total,            drive_time = behavior.drive_time,            speed_average = behavior.speed_average,            fuel_consum_average = behavior.fuel_consum_average != null ? behavior.fuel_consum_average : 0,            alarm_count = behavior.alarm_count,            start_time = behavior.start_time,            end_time = behavior.end_time,            start_location = behavior.start_location,            end_location = behavior.end_location,            clickEvent = null,            time_span = new Array(),            mapMonitorBoxTitle = 'mapMonitorBoxTitle';        /**汇总累计---开始**/        total_mileage += distance;        total_fuel += fuel_consum_total;        total_driveTime_second += drive_time;        total_alarmCount += alarm_count;        /**汇总累计---结束**/        clickEvent = clickEventHtml.format({            device_code: device_code,            travel_id: travel_id,            start_time: start_time,            end_time: end_time        });        time_span.push(dateFormat(start_time, 'MM-dd hh:mm'));        time_span.push('~' + dateFormat(end_time, 'hh:mm'));        time_span = time_span.join('');        var formatJSON = {            time_span: time_span,            start_time: start_time,            driver_name: driver_name,            end_time: end_time,            distance: distance.toFixed(2),            fuel_consum_total: fuel_consum_total.toFixed(2),            speed_average: speed_average.toFixed(2),            drive_time: secondFormat(drive_time, 'hh:mm:ss'),            fuel_consum_average: fuel_consum_average.toFixed(2),            alarm_count: alarm_count,            start_location: start_location,            end_location: end_location,            clickEvent: clickEvent,            mapMonitorBoxTitle: mapMonitorBoxTitle        };        //正常点熄火记录        var baseHtml = new Array();        //判断是否为选中行程        if (select_travelId != null && travel_id == select_travelId) {            baseHtml.push('<div class="mapMonitorBoxBorder-unselect mapMonitorBoxBorder-select" {clickEvent}>');            select_deviceCode = device_code;            select_startTime = start_time;            select_endTime = end_time;        } else {            baseHtml.push('<div class="mapMonitorBoxBorder-unselect" {clickEvent}>');        }        //运行时长小于5分钟或者里程小于2Km不做显示展示        /*  if (drive_time <= 5 * 60 || distance <= 2) {              baseHtml.push('<div class="mapMonitorBox-edit" style="height:90px;">');              baseHtml.push('	<div class="{mapMonitorBoxTitle}">');              baseHtml.push('	  <div class="mapMonitorBoxTitleText" style="padding: 0px !important;margin: 15px 0 0 5px !important; line-height:20px !important; width:auto !important;">{time_span}</div>');              baseHtml.push('	  <div class="mapMonitorBoxTitleText" style="padding: 0px !important;margin: 15px 10px 0 5px !important; line-height:20px !important; width:90px !important; white-space: nowrap;text-overflow:ellipsis; -o-text-overflow:ellipsis; overflow: hidden;float:right;" title="{driver_name}">司机:{driver_name}</div>');              baseHtml.push('	</div>');              baseHtml.push('	<div class="mapMonitorBoxContent" style=" height: 26px; line-height: 26px; margin-top: 8px;">');              baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:42%"><div style="width: 100%;"><span><b>里程:</b>{distance}(km)</span></div></div>');              baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:42%"><div style="width: 100%;"><span><b>能耗:</b>{fuel_consum_total}</span></div></div>');              baseHtml.push('	</div>');              baseHtml.push('</div>');              baseHtml.push('</div>');          } else { //正常记录*/        baseHtml.push('<div class="mapMonitorBox-edit">');        baseHtml.push('	<div class="{mapMonitorBoxTitle}">');        baseHtml.push('	  <div class="mapMonitorBoxTitleText" style="padding: 0px !important;margin: 15px 0 0 5px !important; line-height:20px !important; width:auto !important;">{time_span}</div>');        baseHtml.push('	  <div class="mapMonitorBoxTitleText" style="padding: 0px !important;margin: 15px 10px 0 5px !important; line-height:20px !important; width:90px !important; white-space: nowrap;text-overflow:ellipsis; -o-text-overflow:ellipsis;overflow: hidden;float:right;" title="{driver_name}">司机:{driver_name}</div>');        baseHtml.push('	</div>');        baseHtml.push('	<div class="mapMonitorBoxContents" style=" min-height: 26px; line-height: 26px; margin-top: 8px;">');        baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:95%"><div style="width:100%;white-space:nowrap; text-overflow:ellipsis; -o-text-overflow:ellipsis; overflow: hidden;" title="{start_location}"><span><b>开始地点:</b>{start_location}</span></div></div>');        baseHtml.push('	</div>');        baseHtml.push('	<div class="mapMonitorBoxContents" style=" min-height: 26px; line-height: 26px; margin-top: 8px;">');        baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:95%"><div style="width:100%;white-space:nowrap; text-overflow:ellipsis; -o-text-overflow:ellipsis; overflow: hidden;" title="{end_location}"><span><b>结束地点:</b>{end_location}</span></div></div>');        baseHtml.push('	</div>');        /*  baseHtml.push('	<div class="mapMonitorBoxContent" style=" height: 26px; line-height: 26px; margin-top: 8px;">');          baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:42%"><div style="width: 100%;"><span><b>里程:</b>{distance}(km)</span></div></div>');          baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:42%"><div style="width: 100%;"><span><b>能耗:</b>{fuel_consum_total}</span></div></div>');          baseHtml.push('	</div>');*/        baseHtml.push('	<div class="mapMonitorBoxContent" style=" height: 26px; line-height: 26px; margin-top: 8px;">');        // baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:42%"><div style="width: 100%;"><span><b>百公里能耗:</b>{fuel_consum_average}</span></div></div>');        baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:42%"><div style="width: 100%;"><span><b>点火时长:</b>{drive_time}</span></div></div>');        baseHtml.push('	</div>');        baseHtml.push('	<div class="mapMonitorBoxContent" style=" height: 26px; line-height: 26px; margin-top: 8px;">');        baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:42%"><div style="width: 100%;"><span><b>告警次数:</b>{alarm_count}(次)</span></div></div>');        // baseHtml.push('	  <div class="mapMonitorBoxContentSquare" style="width:42%"><div style="width: 100%;"><span><b>平均速度:</b>{speed_average}(km/h)</span></div></div>');        baseHtml.push('	</div>');        baseHtml.push('</div>');        baseHtml.push('</div>');        // }        baseHtml = baseHtml.join('');        insertHtml.push(baseHtml.format(formatJSON));    }    $("#behaviorListDiv").html(insertHtml.join(''));    $("#behaviorListDiv" + " .mapMonitorBoxBorder-unselect").click(function () {        if (this.onclick) {            $("#behaviorListDiv .mapMonitorBoxBorder-unselect").removeClass("mapMonitorBoxBorder-select");            $(this).addClass("mapMonitorBoxBorder-select");        }    });    /**汇总计算---开始**/    if (total_mileage > 0) {        /**平均能耗**/        total_avgFuel = (total_fuel / total_mileage * 100).toFixed(2);    }    if (total_driveTime_second > 0) {        /**平均速度**/        total_avgSpeed = (total_mileage / (total_driveTime_second / 3600)).toFixed(2);    }    $("#total_mileage").html(total_mileage.toFixed(2));    $("#total_fuel").html(total_fuel.toFixed(2));    $("#total_avgFuel").html(total_avgFuel);    $("#total_alarmCount").html(total_alarmCount);    $("#total_driveTime").html(secondFormat(total_driveTime_second, 'hh:mm:ss'));    $("#total_avgSpeed").html(total_avgSpeed);    /**汇总计算---结束**/    //直接显示被选中行程轨迹信息    if (select_travelId != '') {        showRoute(select_travelId, select_deviceCode, select_startTime, select_endTime);    }}//展示轨迹function showRoute(travelId, deviceCode, startTime, endTime) {    $("#stopRoute").click();    $("#clearAllPoint").click();    //清除地图    map.clearOverlays();    k = 0;    routes.length = 0;    markerList.length = 0;    behaviorList.length = 0;    positions.length = 0;    routes.length = 0;    behaviorList.length = 0;    stop = true;    //显示播放条    $("#playDiv").addClass("display");    //显示仪表盘    $("#main_box").addClass("display");    //隐藏按钮    $("#show_speed").addClass("display");    //当选择正在行驶的行程时，结束时间以当前时间为准    if (endTime == null || endTime == '') {        endTime = new Date();        endTime = endTime.format("yyyy-MM-dd hh:mm:ss");    }    $.ajax({        url: ctx + '/resourcesManage/historyTrajectory/getTrajectoryDetail.do',        type: 'POST',        data: {travelId: travelId, deviceCode: deviceCode, startTime: startTime, endTime: endTime},        dataType: 'JSON',        cache: false,        beforeSend: function () {            showPicture();        },        success: function (data) {            if (data.states == 200) {                if (data.points != null) {                    //获取GPS                    $.ajax({                        url: getGpsUrl,                        type: 'POST',                        data: JSON.stringify({                            'deviceCode': deviceCode,                            'startTime': '' + new Date(startTime).getTime() / 1000 + '',                            'endTime': '' + new Date(endTime).getTime() / 1000 + ''                        }),                        dataType: 'JSON',                        cache: false,                        success: function (gps) {                            if (gps.code == '200') {                                for (var i = 0; i < gps.result.length; i++) {                                    gps.result[i]["isAlarm"] = 1;                                    var lngLat = GpsToBaiduPoints([{lat: gps.result[i].lat, lng: gps.result[i].lng}]);                                    gps.result[i]["lng"] = lngLat[0].lng;                                    gps.result[i]["lat"] = lngLat[0].lat;                                    gps.result[i]["speed"] = gps.result[i].gpsSpeed;                                }                                var gpsData = data.points.concat(gps.result)                                gpsData.sort(function (a, b) {                                    return (a.obdDate < b.obdDate) ? 1 : -1                                });                                //画出轨迹                                drawingTrajectoryLine(gps.result);                                syncTimeToBox();//重置时间点                                resetSlider();//重置进度条                                //vedio.addClickEvent();  //给视频摄像头添加点击事件 同时关闭之前打开的dialog 重置之前的dialog相关参数                                //显示播放条                                $("#playDiv").removeClass("display");                                //显示仪表盘                                $("#main_box").removeClass("display");                                //隐藏按钮                                $("#show_speed").addClass("display");                                //导出轨迹行程ID                                $("#selected_travelId").val(travelId);                            }                            closePicture();                        }                    });                }            } else {                alertMessage("显示轨迹出错，请联系管理员！", 0);            }            closePicture();        }    });}/** * 轨迹对象 */var routes = [];  //定义路径点数组var routeline1; //定义轨迹路线var startMarker;var endMarker;var markerList = [];var behaviorList = [];//存在驾驶行为告警的点var gc = new BMap.Geocoder();/** * 播放轨迹功能 */var k = 0;var car;var positions = [];var point;var carIcon;var degree;var play = true;var routeline2;var stop = false;//是否停止//画轨迹function drawingTrajectoryLine(points) {    if (points != null && points.length > 0) {        var infoWindow = new BMap.InfoWindow('');        var max_lon = 0;        var min_lon = 0;        var max_lat = 0;        var min_lat = 0;        for (var i = 0; i < points.length; i++) {            positions.push(points[i]);            var point = new BMap.Point(points[i].lng, points[i].lat);            var marker = new BMap.Marker();            var speed = points[i].speed;            var fuelCode = $("#fuelCode").val();            if (fuelCode != null && fuelCode != '') {                speed = points[i].gpsSpeed;            }            var time = points[i].obdDate;            var piontDegree = getDegree(points[i].direction); //获取具体轨迹点的角度方向            var direction = getDirection(points[i].direction); //获取具体轨迹点的方向            var satellites = points[i].satellites;            var isAlarm = points[i].isAlarm;            if (i == 0) {                startMarker = new BMap.Marker();                var startIcon = new BMap.Icon(ctx + "/img/map/start_icon.png", new BMap.Size(23, 29), {anchor: new BMap.Size(12, 14)});                startMarker.setPosition(point);                startMarker.setIcon(startIcon);                marker = startMarker;                map.addOverlay(startMarker);                showMessage(marker, point, speed, time, direction, satellites, infoWindow);            } else if (i == points.length - 1) {                endMarker = new BMap.Marker();                var endIcon = new BMap.Icon(ctx + "/img/map/end_icon.png", new BMap.Size(23, 29), {anchor: new BMap.Size(12, 14)});                endMarker.setPosition(point);                endMarker.setIcon(endIcon);                marker = endMarker;                map.addOverlay(endMarker);                showMessage(marker, point, speed, time, direction, satellites, infoWindow);            } else {                if (isAlarm == 1) {                    var routeIcon = new BMap.Icon(ctx + "/img/map/route_direction_" + piontDegree + ".png", new BMap.Size(24, 24), {anchor: new BMap.Size(6, 6)});                    marker = new BMap.Marker(point, {icon: routeIcon});                    markerList.push(marker);                    showMessage(marker, point, speed, time, direction, satellites, infoWindow);                } else if (isAlarm == 2) {                    var alarmTypeId = points[i].alarmTypeId;                    var alarmName = points[i].alarmName;                    var startTime = points[i].startTime;                    var duration = points[i].duration;                    var alarmAddress = points[i].alarmAddress;                    var iconSrc = alarmImg(alarmTypeId);                    if (points[i].alarmTypeId == 270) {                        alarmName = '疲劳驾驶';                    }                    var alarmIcon = new BMap.Icon(ctx + iconSrc, new BMap.Size(24, 24), {anchor: new BMap.Size(6, 8)});                    var alarmMarker = new BMap.Marker(point, {icon: alarmIcon});                    var ddsVedio = points[i].ddsVedio;                    var adasImg = points[i].adasImg;                    var alarmType = points[i].alarmType;                    map.addOverlay(alarmMarker);                    showAlarm(alarmMarker, point, time, alarmName, startTime, duration, infoWindow, ddsVedio, adasImg, alarmType);                    behaviorList.push(alarmMarker);                }            }            routes.push(point);            if (i == 0) {                max_lon = point.lng;                min_lon = point.lng;                max_lat = point.lat;                min_lat = point.lat;            } else {                if (point.lng > max_lon) {                    max_lon = point.lng;//最大经度                } else {                    min_lon = point.lng;//最小经度                }                if (point.lat > max_lon) {                    max_lat = point.lat;//最大纬度                } else {                    min_lat = point.lat;//最小纬度                }            }        }        //轨迹显示在地图可视范围内        if (max_lon > 0 && max_lat > 0 && min_lon > 0 && min_lat > 0) {            var pointArray = new Array();            //左上角            pointArray.push(new BMap.Point(min_lon, max_lat));            //右上角            pointArray.push(new BMap.Point(max_lon, max_lat));            //左下角            pointArray.push(new BMap.Point(min_lon, min_lat));            //右下角            pointArray.push(new BMap.Point(max_lon, min_lat));            var b = new BMap.Bounds(new BMap.Point(min_lon, min_lat), new BMap.Point(max_lon, max_lat));            //设置地图区域            try {                map.setZoom(11);                map.setCenter(new BMap.Point((max_lon + min_lon) / 2, (max_lat + min_lat) / 2));                BMapLib.AreaRestriction.setBounds(map, b);                //清除限制条件                BMapLib.AreaRestriction.clearBounds();            } catch (e) {                alert("控制地图显示区域出错！");            }        }        routeline1 = new BMap.Polyline(routes, {strokeColor: '#0000ff', strokeWeight: 4, strokeOpacity: 0.8});        map.addOverlay(routeline1);        var fuelCode = $("#fuelCode").val();        //$("#playDiv").show();        //拉动进程条改变轨迹长度和小车位置        $("#slider").slider({            max: positions.length - 1,            slide: function (event, ui) {                if (k == 0) {                    map.clearOverlays();                    routes.length = 0;                    map.addOverlay(startMarker);                    point = new BMap.Point(positions[0].lng, positions[0].lat);                    if (positions[0].direction != null) {                        degree = getDegree(positions[0].direction);                    } else {                        degree = getDegree(0);                    }                    carIcon = new BMap.Icon(ctx + "/img/map/car_driving_" + degree + ".png", new BMap.Size(35, 35));                    routes.push(point);                    //添加轨迹线                    routeline2 = new BMap.Polyline(routes, {                        strokeColor: '#0000ff',                        strokeWeight: 4,                        strokeOpacity: 0.8                    });                    map.addOverlay(routeline2);                    car = new BMap.Marker(point, {icon: carIcon});                    map.addOverlay(car);                    /**仪表盘车速**/                    if (fuelCode != null && fuelCode != '') {                        changeSpeed(points[0].gpsSpeed);                    } else {                        changeSpeed(points[0].speed);                    }                }                if (k < ui.value) {	 //前进                    for (var i = k; i <= ui.value; i++) {                        point = new BMap.Point(positions[i].lng, positions[i].lat);                        if (positions[i].direction != null) {                            degree = getDegree(positions[i].direction);                        } else {                            degree = getDegree(0);                        }                        carIcon = new BMap.Icon(ctx + "/img/map/car_driving_" + degree + ".png", new BMap.Size(35, 35));                        routes.push(point);                        routeline2.setPath(routes);                        car.setPosition(point);                        car.setIcon(carIcon);                        /**修改轨迹图片点的时间**/                        syncTimeToBox(positions[i].obdDate);                        /**仪表盘车速**/                        if (fuelCode != null && fuelCode != '') {                            changeSpeed(positions[i].gpsSpeed);                        } else {                            changeSpeed(positions[i].speed);                        }                    }                } else if (k > ui.value) { //回退                    for (var j = k; j >= ui.value; j--) {                        point = new BMap.Point(positions[j].lng, positions[j].lat);                        if (positions[j].direction != null) {                            degree = getDegree(positions[j].direction);                        } else {                            degree = getDegree(0);                        }                        carIcon = new BMap.Icon(ctx + "/img/map/car_driving_" + degree + ".png", new BMap.Size(35, 35));                        routes.length = j;                        routeline2.setPath(routes);                        car.setPosition(point);                        car.setIcon(carIcon);                        /**修改轨迹图片点的时间**/                        syncTimeToBox(positions[j].obdDate);                        /**仪表盘车速**/                        if (fuelCode != null && fuelCode != '') {                            changeSpeed(positions[j].gpsSpeed);                        } else {                            changeSpeed(positions[j].speed);                        }                    }                }                k = ui.value;                //vedio.closeDialog(vedioDialog);            }        });    }}//按钮点击事件$(function () {    // vedioDialog = $("#cmsv6flash");    // vedio.initPlayer(); //初始化    // vedio.initVedioParams();//初始化视频设备号    // vedio.login();      //登陆    // vedioDialog.dialog({    //       resizable: false,    //       height  :400,    //       hide    :true, //点击关闭是隐藏    //       width   :440,    //       modal   : false,    //       autoOpen: false,    //       open:function(){    //     	  if(!vedio.getFinished()){   //未初始化    //     		  vedio.initPlayer();    //     	  }    //     	  //设置dialog title    //     	  var selectTag = '<div id="historyVedio" style="position:absolute;top:10px;float: right;">录像回放</div><select id="selectVedio" onchange="vedio.setVedioNum(this.value)" style="position:absolute;top:6px;left:190px;"><option value="" selected="selected">选择回放通道</option>';    //     	  var num = $("#vedioNum").val() ? $("#vedioNum").val():4;    //     	  for(var i = 1 ; i <= num ; i ++){    //     		  selectTag += '<option value="'+i+'">通道'+i+'</option>'    //     	  }    //     	  selectTag += '</select>';    //           $('.ui-dialog-titlebar').after(selectTag);    //       },    //       close: function(){    //     	  vedio.paramsReset();    //     	  $("#selectVedio option[value='']").attr("selected",true);    //     	  $("#historyVedio").text("录像回放");    //       }    // });    //开始播放轨迹    $("#playRoute").click(function () {        //清楚轨迹点        $("#clearAllPoint").click();        var fuelCode = $("#fuelCode").val();        play = true;        if (stop) {            stop = false;        }        if (k == 0) {            map.clearOverlays();            routes.length = 0;            map.addOverlay(startMarker);            point = new BMap.Point(positions[0].lng, positions[0].lat);            routes.push(point);            //添加轨迹线            routeline2 = new BMap.Polyline(routes, {strokeColor: '#0000ff', strokeWeight: 4, strokeOpacity: 0.8});            map.addOverlay(routeline2);            //获取小车图片方向            if (positions[0].direction != null) {                degree = getDegree(positions[0].direction);            } else {                degree = getDegree(0);            }            carIcon = new BMap.Icon(ctx + "/img/map/car_driving_" + degree + ".png", new BMap.Size(35, 35));            car = new BMap.Marker(point, {icon: carIcon});            map.addOverlay(car);            /**仪表盘车速**/            changeSpeed(positions[0].speed);            if (fuelCode != null && fuelCode != '') {                changeSpeed(positions[0].gpsSpeed);            } else {                changeSpeed(positions[0].speed);            }        }        $(this).hide();        $("#pauseRoute").show();        $("#stopRoute").show();        $("#searchBtn").attr("disabled", "disabled");        //vedio.closeDialog(vedioDialog);   //判断视频历史回放窗口是否打开 如果打开则关闭        resetMkPoint();    });    //暂停轨迹播放    $("#pauseRoute").click(function () {        play = false;        $(this).hide();        $("#playRoute").show();        $("#searchBtn").removeAttr("disabled");    });    //停止轨迹播放    $("#stopRoute").click(function () {        play = false;        $("#playRoute").show();        $("#pauseRoute").hide();        $("#searchBtn").removeAttr("disabled");        map.clearOverlays();        routes.length = 0;        /**修改轨迹图片点的时间**/        syncTimeToBox();        /**仪表盘置零**/        changeSpeed(0);        map.addOverlay(routeline1);        map.addOverlay(startMarker);        for (var i = 0; i < behaviorList.length; i++) {            map.addOverlay(behaviorList[i]);        }        map.addOverlay(endMarker);        $(".ui-slider-range").css("width", 0);        $(".ui-slider-handle").css("left", 0);        stop = true;        k = 0;    });    //显示实时视频    // $("#showCurrentVedio").click(function(){    // 	var hasFixed    = vedio.hasFixed();    // 	if(hasFixed){    // 		var param    = [];    // 		var jsession = vedio.getJsession();    //      	param.push({name: 'jsession' , value: jsession});             //登陆唯一标示    //      	param.push({name: 'devIdno'  , value: $("#vedioCode").val()});//视频设备代号    // 		$.ajax({    //   			 type : "POST",    //                async: false,    //                url  : "http://"+vedioIpPort.ip+":"+vedioIpPort.loginSearchPort+"/StandardApiAction_getDeviceOlStatus.action",//"http://113.88.198.112:8080/StandardApiAction_getDeviceOlStatus.action",    //                dataType: "jsonp",    //                jsonp   : "callback",   //传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)    //                jsonpCallback:"getData",//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名    //                data : param,    //   			   cache: false,/*禁用浏览器缓存*/    //                success: function(data){    //             	   if(data.result == 0){    //    					   var online = data.onlines[0].online;    //    					   if(1 != online){    //    						   alertMessage("视频设备不在线!" , 0);    //    					   }else{    //    						    liveVedioDialog = $("#currentflash");   //实时视频弹出框    // 	   						liveVedioDialog.dialog({    // 	   						      resizable: false,    // 	   						      height  :400,    // 	   						      hide    :true, //点击关闭是隐藏    // 	   						      width   :400,    // 	   						      title   :'实时视频',    // 	   						      modal   : false,    // 	   						      autoOpen: true,    // 	   						      open:function(){    // 	   						    	  initPlayer();    // 	   						      }    // 	   						});    //    					   }    //    				    } else {    //   						 alertMessage("获取视频设备在线状态失败!" , 0);    //    				    }    //                },    //                error: function (XMLHttpRequest, textStatus, errorThrown) {    // 	   				try {    // 	   					if (p.onError) p.onError(XMLHttpRequest, textStatus, errorThrown);    // 	   				} catch (e) {}    // 	   				alertMessage("获取视频设备在线状态失败!" , 0);    //   			 }    //         });    // 		function initPlayer(){    // 			 //视频插件初始化参数    // 		      var params = {    // 		         allowFullscreen  : "true",    // 		         allowScriptAccess: "always",    // 		         bgcolor: "#FFFFFF",    // 		         wmode  : "transparent"    // 		      };    // 		      //初始化flash    // 		      swfobject.embedSWF("flash/player.swf", "currentflash", 400, 400, "11.0.0", null, null, params, null);    // 		      initFlash();    // 		};    // 		function initFlash() {    // 		      if (swfobject.getObjectById("currentflash") == null ||    // 	              typeof swfobject.getObjectById("currentflash").setWindowNum == "undefined" ) {    // 	              setTimeout(initFlash, 50);    // 		      } else {    // 	              //设置视频插件的语言    // 	              swfobject.getObjectById("currentflash").setLanguage("flash/cn.xml");    // 	              //先将全部窗口创建好    // 	              swfobject.getObjectById("currentflash").setWindowNum(36);    // 	              //再配置当前的窗口数目    // 	              swfobject.getObjectById("currentflash").setWindowNum(4);    // 	              //设置视频插件的服务器    // 	              swfobject.getObjectById("currentflash").setServerInfo(vedioIpPort.ip , vedioIpPort.flashInitPort);    // 	              vedio.playLiveVideo();    // 		     }    // 	   }    // 	}else{    // 		alertMessage("车辆未安装视频设备!" , 0);    // 	}    // });    //显示轨迹点    $("#showAllPoint").click(function () {        if (markerList.length > 0) {            for (var i = 0; i < markerList.length; i++) {                map.addOverlay(markerList[i]);            }            $(this).hide();            $("#clearAllPoint").removeClass("display");            $("#clearAllPoint").show();        }    });    //清除轨迹点    $("#clearAllPoint").click(function () {        for (var i = 0; i < markerList.length; i++) {            map.removeOverlay(markerList[i]);        }        $(this).hide();        $("#showAllPoint").show();    });})// var vedioIpPort = {// 	ip              : "114.119.7.90",//"192.168.1.24",// 	loginSearchPort : "8080",// 	flashInitPort   : "6605",// 	vedioSearch     : "6604"// };// vedio = function(){//     var isInitFinished = false;    //视频插件是否加载完成//     //var ip       = "192.168.1.24"; //视频服务器IP//     //var port     = "6605";         //视频服务器端口//     var vedioPlayUrl = "http://"+vedioIpPort.ip+":"+vedioIpPort.vedioSearch+"/3/5?";//     var account  = "szkl2016";//"admin";//"szkl2016"; //"hayadmin";//     var password = "000000"; //"admin" ;  //"111111";//     var jsession = "";//     var playLong = 1;          //播放时长1分钟//     var playFiles= []  ;          //播放的文件//     var vedioNum  ;//摄像头路数//     var DevIDNO   ;//视频设备代号//     var selectVedioNum = 1;  //默认请求通道一//     var currentClickK  = 0 ;//     //车辆是否安装视频设备//     var _addClickEvent = function(){//     	_closeDialog();// 		//给进度条上的box添加点击事件// 		$("div.box span").click(function(){// 			if(DevIDNO){// 				if(vedioDialog){// 					vedioDialog.dialog("open");// 					vedio.saveCurrentK();// 				}// 			}else{// 				alertMessage("车辆未安装视频设备!" , 0);// 			}// 		});//     };//     var _closeDialog = function(dialog){//     	if(dialog && dialog.dialog('isOpen')){//     		dialog.dialog('close');//         }//     };//     var _hasFixed = function(){//     	if(DevIDNO){// 			return true;// 		}else{// 			return false;// 		}//     };//     //初始化视频设备号//     var _initVedioParams = function(){//     	vedioNum = $("#vedioNum").val() ? $("#vedioNum").val():4;//摄像头路数//     	DevIDNO  = $("#vedioCode").val();//? $("#vedioCode").val():100503;//视频设备代号//     };// 	var _initPlayer = function(){// 	      //视频插件初始化参数// 	      var params = {// 	         allowFullscreen  : "true",// 	         allowScriptAccess: "always",// 	         bgcolor: "#FFFFFF",// 	         wmode  : "transparent"// 	      };// 	      //初始化flash// 	      swfobject.embedSWF("flash/player.swf", "cmsv6flash", 440, 400, "11.0.0", null, null, params, null);// 	      initFlash();// 	};// 	//参数重置// 	var _paramsReset = function(){// 		playFiles = [];// 		isInitFinished = false;// 	};// 	//选择摄像头重置// 	var _setSelectVedioNum = function(selectVedio){// 		selectVedioNum = selectVedio;// 		swfobject.getObjectById("cmsv6flash").stopVideo(0);// 		if(selectVedio){// 			_checkIsOnline();// 		}// 	};// 	//视频插件是否加载完成// 	var initFlash  = function() {// 	      if (swfobject.getObjectById("cmsv6flash") == null ||//               typeof swfobject.getObjectById("cmsv6flash").setWindowNum == "undefined" ) {//               setTimeout(initFlash, 50);// 	      } else {//               //设置视频插件的语言//               swfobject.getObjectById("cmsv6flash").setLanguage("flash/cn.xml");//               //先将全部窗口创建好//               swfobject.getObjectById("cmsv6flash").setWindowNum(36);//               //再配置当前的窗口数目//               swfobject.getObjectById("cmsv6flash").setWindowNum(1);//               //设置视频插件的服务器//               swfobject.getObjectById("cmsv6flash").setServerInfo(vedioIpPort.ip , vedioIpPort.flashInitPort);// 			  //_setBufferTime(0 , 50);//               isInitFinished = true;// 	    }// 	};// 	//登录// 	var _login = function(){//      	var param = [];//      	param.push({name: 'account' , value: account});//      	param.push({name: 'password', value: password});//      	if(!jsession){  //已经登录//      		$.ajax({// 	   			 type : "POST",// 	                async: false,// 	                url  : "http://"+vedioIpPort.ip+":"+vedioIpPort.loginSearchPort+"/StandardApiAction_login.action",// 	                dataType: "jsonp",// 	                jsonp   : "callback",//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)// 	                jsonpCallback:"getData",//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名// 	                data : param,// 	   			    cache: false,/*禁用浏览器缓存*/// 	                success: function(data){// 	   				    if(data.result == 0){// 	   					     jsession = data.jsession;// 	   					     //_setBufferTime(0 , 50);   //设置缓存时间// 	   					   //checkIsOnline();//searchVedio();// 	   				    } else {// 	   				    	 alertMessage("视频服务器登陆失败!" , 0);// 	   				    }// 	                },// 	                error: function (XMLHttpRequest, textStatus, errorThrown) {// 		   				try {// 		   					alertMessage("视频服务器登陆失败!" , 0);// 		   				} catch (e) {}//// 	   			 }//             });//      	}else{// 			searchVedio();//      	}// 	};// 	//保存当前点击的位置点 用来做录像回放// 	var _saveCurrentK = function(){// 		currentClickK = k;//// 	};// 	//设备视频在线状态判断// 	var _checkIsOnline = function(){// 		var param = [];//      	param.push({name: 'jsession' , value: jsession});//      	param.push({name: 'devIdno'  , value: DevIDNO});//视频设备代号// 		$.ajax({//   			 type : "POST",//                async: false,//                url  : "http://"+vedioIpPort.ip+":"+vedioIpPort.loginSearchPort+"/StandardApiAction_getDeviceOlStatus.action",//                dataType: "jsonp",//                jsonp   : "callback",   //传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)//                jsonpCallback:"getData",//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名//                data : param,//   			   cache: false,/*禁用浏览器缓存*///                success: function(data){//             	   if(data.result == 0){//    					   var online = data.onlines[0].online//    					   if(1 != online){//    						   alertMessage("视频设备不在线!" , 0);//    					   }else{//    						   searchVedio();//    					   }//    				    } else {//   						 alertMessage("获取视频设备在线状态失败!" , 0);//    				    }//                },//                error: function (XMLHttpRequest, textStatus, errorThrown) {// 	   				try {// 	   					if (p.onError) p.onError(XMLHttpRequest, textStatus, errorThrown);// 	   				} catch (e) {}// 	   				alertMessage("获取视频设备在线状态失败!" , 0);//   			 }//         });// 	};// 	//index 窗口下标   t时长// 	var _setBufferTime = function(index , time){// 		swfobject.getObjectById("cmsv6flash").setBufferTime(index , time);// 	};// 	/**//   	 * 开始远程回放//   	 * 113.88.198.112//   	 * FILELOC  文件位置//   	   FILESVR  服务器ID//   	   chn      设备通道（从0开始）0表示通道1，1表示通道2//        FILEBEG  文件开始时间 单位秒，如3600=1点//        FILEEND  文件结束时间单位秒，如7200=2点，结束时间可能会大于86400，这个表示出现了跨天的情况。//        PLAYIFRM 表示只播放I帧（请填为0）。//        PLAYBEG  表示播放起始的偏移，单位毫秒，相当于文件的开始时间算，0表示从文件开始位置进行播放。//        PLAYEND  表示播放结束的偏移，单位毫秒， 相当文件开始时间算，不得大于文件的总时长。//        PLAYCHN  表示播放那个通道的录像，文件存在多个通道的录像时使用，如果不存在多个通道，则直接使用0。////   	    http://114.119.7.90:6604/3/5?DownType=5&DevIDNO=10009&FILELOC=1// 		&FILESVR=0&FILECHN=0&FILEBEG=1// 		&FILEEND=100&PLAYIFRM=0&// 		PLAYFILE=/record/H20121123-112931P3A1P0.avi// 		&PLAYBEG=0&PLAYEND=0&PLAYCHN=0//   	**///   	var _startPlayback = function(index , url) {////   		var obdTime = positions[currentClickK].obdDate;//"2016-08-04 17:50:00";//positions[currentClickK].obdDate;//   		var obdTimeArr = obdTime.split(/[-\s:/]/);//   		var obdTimeDate = new Date(obdTimeArr[0] , obdTimeArr[1] , obdTimeArr[2] , obdTimeArr[3] , obdTimeArr[4] , obdTimeArr[5]);//   		if (!isInitFinished){//           	return;//       	} else {//       		//回放之前先停止//       		//文件格式  OBD_YYYYMMDD_HHMISS_HHMISS_通道号.264//       		var start = "OBD_"+obdTimeArr[0]+obdTimeArr[1]+obdTimeArr[2]+"_"+obdTimeArr[3]+obdTimeArr[4]+obdTimeArr[5]+"_";//       		obdTimeDate.setMinutes(obdTimeDate.getMinutes()+playLong); //设置播放时长//       		var endTime = formartHHMISS(obdTimeDate);//       		$("#historyVedio").text("录像回放 "+obdTime.substring(11)+"-"+endTime.substring(0 , 2)+":"+endTime.substring(2 , 4)+":"+endTime.substring(4 , 6));//       		//for(var i = 1 ; i <= 1 ; i++){//   			var params = {FILELOC : 1    , FILESVR  : 0 , FILECHN   : selectVedioNum,//   					      FILEBEG : 0    , FILEEND  : 0  , PLAYIFRM : 0,//   					      PLAYFILE: start+endTime+"_"+selectVedioNum+".264"  , PLAYBEG:0 ,PLAYEND:0,PLAYCHN:0, DevIDNO:DevIDNO};//   			var urlParams = paramsJoin(params);//   			//停止远程回放//   			swfobject.getObjectById("cmsv6flash").stopVideo(0);//   		    //开始回放//   			//"http://113.88.198.112:6604/3/5?DownType=5&DevIDNO=00000&FILELOC=1&FILESVR=0&FILECHN=0&FILEBEG=1&FILEEND=100&PLAYIFRM=0&PLAYFILE=/mnt/hddrec/record/H264_20160705_191551_N2_T0.264&PLAYBEG=0&PLAYEND=0&PLAYCHN=0"//   			var ret = swfobject.getObjectById("cmsv6flash").startVod(0 , urlParams);//       		//}//       	}//   	};//   	//在线播放//     var _playLiveVideo = function() {// 		 for(var i = 0 ; i < vedioNum ; i++){//   			//先停止视频窗口//   			swfobject.getObjectById("currentflash").stopVideo(i);//   			//播放视频//   			swfobject.getObjectById("currentflash").startVideo(i, jsession, DevIDNO, i, 1, true);//   		 }//   	};//   	var formartHHMISS = function(obdTimeDate){//   		if(obdTimeDate instanceof Date){//   			var hour    = obdTimeDate.getHours();//   	  		if(hour < 10){//   	  			hour= "0"+hour;//   	  		}//   	  		var minutes = obdTimeDate.getMinutes();//   	  		if(minutes < 10){//   	  			minutes= "0"+minutes;//   	  		}//   	  		var seconds = obdTimeDate.getSeconds();//   	  		if(seconds < 10){//   	  			seconds= "0"+seconds;//   	  		}//   	  		return hour+""+minutes+""+seconds;//   		}else{//   			return "";//   		}//   	}//   	var _stopPlayback = function(){//   		for(var i = 0 ; i < vedioNum ; i++){//   			swfobject.getObjectById("cmsv6flash").stopVideo(i);//   		}//   	};//   	//url拼接//   	var paramsJoin = function(params){//   		var url = vedioPlayUrl+"DownType=5";//   		for(var i in params){//   			url = url+"&"+i+"="+params[i];//   		}//   		return url;//   	};//   	//http://113.88.198.112:6604/3/5?DownType=2&jsession=cf6b70a3-c82b-4392-8ab6-bbddce336222&DevIDNO=500000&LOC=1&CHN=0&YEAR=2014&MON=12&DAY=10&RECTYPE=1&FILEATTR=2&BEG=0&END=86399//   	//查询终端视频//   	var  searchVedio = function (){//   		var obdTime = positions[currentClickK].obdDate;//"2016-08-04 17:50:00";//positions[currentClickK].obdDate;//   		var dateTimeArr = obdTime.split(/[-\s:/]/);//   		var param = [];//      	param.push({name: 'DownType' , value: 2});//      	param.push({name: 'jsession' , value: jsession});//      	param.push({name: 'DevIDNO'  , value: DevIDNO});//视频设备代号//      	param.push({name: 'LOC'      , value: 1});//1表示设备，2表示存储服务器，4表示下载服务器。//      	param.push({name: 'CHN'      , value: "8"+selectVedioNum});//0表示通道1，1表示通道2，-1表示所有通道(81 通道1  89所有通道)//      	param.push({name: 'YEAR'     , value: dateTimeArr[0]});//      	param.push({name: 'MON'      , value: dateTimeArr[1]});//      	param.push({name: 'DAY'      , value: dateTimeArr[2]});//      	param.push({name: 'RECTYPE'  , value: 0});//录像类型0表示常规，1表示报警，-1表示所有//      	param.push({name: 'FILEATTR' , value: 2});//2表示录像//      	var BEG = Number(dateTimeArr[3])*60*60+ Number(dateTimeArr[4])*60+Number(dateTimeArr[5]); //转换秒//      	param.push({name: 'BEG'      , value: BEG});//      	param.push({name: 'END'      , value: BEG+1*60});//   	    $.ajax({// 			 type : "GET",//              url  : "http://"+vedioIpPort.ip+":" +vedioIpPort.vedioSearch+"/3/5/callback=getData",//              dataType: "jsonp",//              async   : false,//              data    : param,//              jsonp   : "callback",//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)//              jsonpCallback:"getData",//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名// 			 cache  : false,//禁用浏览器缓存//              success: function(data){// 				 if(data.result == 0){// 					 if(data.files){// 						 playFiles = data.files;// 						 _startPlayback();  //播放视频// 					 }else{// 						 alertMessage("视频设备不存在录像文件!" , 0);// 					 }// 				 } else {// 					 alertMessage("获取视频文件信息失败!" , 0);// 				 }//              },//              error: function (XMLHttpRequest, textStatus, errorThrown) {// 				 alertMessage("获取视频文件信息失败!" , 0);// 			 }//          });//   	};//   	var _getJsession = function(){//   		return jsession;//   	};//   	var _getFinished = function(){//   		return isInitFinished;//   	};//   	return {//   		addClickEvent : function(){//   			_addClickEvent();//   		},//   		initPlayer: function(){//   			_initPlayer();//   		},//   		login: function(){//   			_login();//   		},//   		initVedioParams: function(){//   			_initVedioParams();//   		},//   		startPlayback: function(index , url){//   			_startPlayback(index , url)//   		},//   		playLiveVideo: function(){//   			_playLiveVideo()//   		},//   		getFinished: function(){//   			return _getFinished();//   		},//   		setVedioNum:function(selectVedioNum){//   			_setSelectVedioNum(selectVedioNum);//   		},//   		getJsession: function(){//   			return _getJsession();//   		},//   		paramsReset: function(){//   			_paramsReset();//   		},//   		stopPlayback: function(){//   			_stopPlayback();//   		},//   		checkIsOnline:function(){//   			_checkIsOnline();//   		},//   		hasFixed:function(){//   			return _hasFixed();//   		},//   		saveCurrentK:function(){//   			_saveCurrentK()//   		},//   		closeDialog:function(dialog){//   			_closeDialog(dialog)//   		}//   	}// }();//轨迹回放时同步OBD时间到轨迹线上的box中function syncTimeToBox(obdTime) {    var timeP = $("div.box p")    if (timeP) {        if (obdTime) {            var dateTimeArr = obdTime.split(/[-\s:/]/);            timeP.text(dateTimeArr[3] + ":" + dateTimeArr[4] + ":" + dateTimeArr[5]);        } else {            timeP.text("");        }    }}//重置进度条function resetSlider() {    $(".ui-slider-range").css("width", 0);    $(".ui-slider-handle").css("left", 0);}//轨迹运行function resetMkPoint() {    if (play) {        point = new BMap.Point(positions[k].lng, positions[k].lat);        routes.push(point);        //小车运行时轨迹线重现        routeline2.setPath(routes);        if (positions[k].direction != null) { //获取小车图片方向            degree = getDegree(positions[k].direction);        } else {            degree = getDegree(0);        }        carIcon = new BMap.Icon(ctx + "/img/map/car_driving_" + degree + ".png", new BMap.Size(35, 35));        car.setPosition(point);        car.setIcon(carIcon);        map.setCenter(point);        /**修改轨迹图片点的时间**/        syncTimeToBox(positions[k].obdDate);        /**仪表盘转速**/        var fuelCode = $("#fuelCode").val();        if (fuelCode != null && fuelCode != '') {            changeSpeed(positions[k].gpsSpeed);        } else {            changeSpeed(positions[k].speed);        }        var percent = (k / positions.length) * 100 + "%";        $(".ui-slider-range").css("width", percent);        $(".ui-slider-handle").css("left", percent);        if (k < positions.length - 1) {            setTimeout(function () {                k++;                resetMkPoint();            }, 200);        } else {            map.clearOverlays();            routes.length = 0;            map.addOverlay(routeline1);            map.addOverlay(startMarker);            for (var i = 0; i < behaviorList.length; i++) {                map.addOverlay(behaviorList[i]);            }            map.addOverlay(endMarker);            //显示设置起点            k = 0;            $("#playRoute").show();            $("#pauseRoute").hide();            $("#searchBtn").removeAttr("disabled", "disabled");            $(".ui-slider-range").css("width", 0);            $(".ui-slider-handle").css("left", 0);            syncTimeToBox();        }    } else if (stop) {        k = 0;        syncTimeToBox();    }}//点击具体轨迹点显示相关信息function showMessage(marker, point, speed, time, direction, satellites, infoWindow) {    marker.addEventListener("click", function () {        gc.getLocation(point, function (rs) {            var addComp = rs.addressComponents;            var address;            if (addComp.province == addComp.city) {                address = "中国" + addComp.city + addComp.district + addComp.street;            } else {                address = addComp.province + addComp.city + addComp.district + addComp.street;            }            var message = '<p style="font-size:12px;height:12px;">方向：' + direction + '</p>' +                '<p style="font-size:12px;height:12px;">速度：' + speed + '公里/小时</p>' +                '<p style="font-size:12px;height:12px;">大概地点：' + address + '</p>' +                // '<p style="font-size:12px;height:12px;">卫星数：' + satellites + '</p>' +                '<p style="font-size:12px;height:12px;">定位时间：' + time + '</p>';            infoWindow.setContent(message);            marker.openInfoWindow(infoWindow);        });    });}//查看视频或图片function playMedia(url, title) {    openMediaTab(title, url)}function openMediaTab(name, url) {    window.parent.$.fn.jerichoTab.addTab({        tabFirer: null,        title: name,        closeable: true,        data: {            dataType: 'iframe',            dataLink: url        }    }).showLoader().loadData();    resizeTab();}//点击具体告警点显示相关信息function showAlarm(marker, point, time, alarmName, startTime, duration, infoWindow, ddsVedio, adasImg, alarmType) {    marker.addEventListener("click", function () {        gc.getLocation(point, function (rs) {            var addComp = rs.addressComponents;            var address;            if (addComp.province == addComp.city) {                address = "中国" + addComp.city + addComp.district + addComp.street;            } else {                address = addComp.province + addComp.city + addComp.district + addComp.street;            }            var message = '<p style="font-size:12px;height:12px;">告警类型：' + alarmName + '</p>' +                '<p style="font-size:12px;height:12px;">发生时间：' + startTime + '</p>';            //有持续时长才显示持续时长            if (duration > 0) {                message += '<p style="font-size:12px;height:12px;">持续时长：' + secondFormat(duration, 'hh:mm:ss') + '</p>';            }            message += '<p style="font-size:12px;height:12px;margin-bottom: 13px;">大概地点：' + address + '</p>';            var mediaHtml = '';            if (adasImg && typeof(adasImg) != 'undefined') {                mediaHtml += '<a class="btn btn-small" style="background-color: #7ab5d3;color: white;margin-right: 8px;" href="javascript:playMedia(\'http://cloud.che-mi.net:8080/photo/vrPhoto.html?picurl=' + adasImg + '\',\'' + alarmName + '\');">查看图片</a>';            }            if (ddsVedio && typeof(ddsVedio) != 'undefined') {                if (alarmType == 1) {                    mediaHtml += '<a class="btn btn-small" style="background-color: #7ab5d3;color: white;margin-left: 8px;" href="javascript:playMedia(\'' + ddsVedio + '\',\'' + alarmName + '\');">查看视频</a>';                } else {                    mediaHtml += '<a class="btn btn-small" style="background-color: #7ab5d3;color: white;margin-left: 8px;" href="javascript:playMedia(\'http://cloud.che-mi.net:8080/vr/index.html?videourl=' + ddsVedio + '\',\'' + alarmName + '\');">查看视频</a>';                }            }            if (mediaHtml) {                message += '<p style="font-size:12px;height:12px;text-align: center;">' + mediaHtml + '</p>';            }            infoWindow.setContent(message);            marker.openInfoWindow(infoWindow);        });    });}//获取小车图片方向function getDegree(direction) {    var degree = "";    if (direction > 337.5 || direction < 22.5) {        degree = "0";    } else if (22.5 < direction && direction < 67.5) {        degree = "45";    } else if (67.5 < direction && direction < 112.5) {        degree = "90";    } else if (112.5 < direction && direction < 157.5) {        degree = "135";    } else if (157.5 < direction && direction < 202.5) {        degree = "180";    } else if (202.5 < direction && direction < 247.5) {        degree = "225";    } else if (247.5 < direction && direction < 292.5) {        degree = "270";    } else if (292.5 < direction && direction < 337.5) {        degree = "315";    }    return degree;}//获取具体一个轨迹点的方向function getDirection(direction) {    var moveDirection = "";    if (direction > 337.5 || direction < 22.5) {        moveDirection = "北";    } else if (22.5 < direction && direction < 67.5) {        moveDirection = "东北";    } else if (67.5 < direction && direction < 112.5) {        moveDirection = "东";    } else if (112.5 < direction && direction < 157.5) {        moveDirection = "东南";    } else if (157.5 < direction && direction < 202.5) {        moveDirection = "南";    } else if (202.5 < direction && direction < 247.5) {        moveDirection = "西南";    } else if (247.5 < direction && direction < 292.5) {        moveDirection = "西";    } else if (292.5 < direction && direction < 337.5) {        moveDirection = "西北";    }    return moveDirection;}/** * 获取告警图标 */function alarmImg(alarmTypeId) {    var iconSrc = "";    switch (alarmTypeId) {        case '1004002':            iconSrc += '/img/vehicleMapMonitoring/timebar-icon/red_cx.png';            break;        case '1004003':            iconSrc += '/img/vehicleMapMonitoring/timebar-icon/red_dx.png';            break;        case '1004001':            iconSrc += '/img/vehicleMapMonitoring/timebar-icon/red_jd.png';            break;        case '9002':            iconSrc += '/img/vehicleMapMonitoring/timebar-icon/red_jj.png';            break;        case '9001':            iconSrc += '/img/vehicleMapMonitoring/timebar-icon/red_jx.png';            break;        case '9003':            iconSrc += '/img/vehicleMapMonitoring/timebar-icon/red_jz.png';            break;        case '9004':            iconSrc += '/img/vehicleMapMonitoring/timebar-icon/red_pl.png';            break;        case '269':            iconSrc += '/img/vehicleMapMonitoring/timebar-icon/red_kd.png';            break;        case '270':            iconSrc += '/img/vehicleMapMonitoring/timebar-icon/red_pl.png';            break;        default:            iconSrc += '/img/map/behavior.png';    }    return iconSrc;}/** * 查询未结束的行程/展示当前车辆信息 * @param vehicleId * @param queryDay */function findUnEndTravel(vehicleId, beginTime, endTime) {    $.ajax({        url: ctx + '/resourcesManage/historyTrajectory/findUnEndTravel.do',        type: 'POST',        data: {vehicleId: vehicleId, beginTime: beginTime, endTime: endTime},        dataType: 'JSON',        cache: false,        success: function (data) {            if (data.states == 200) {                if (data.travel != undefined && data.travel != null) {                    var point = new BMap.Point(data.travel.LONGITUDE, data.travel.LATITUDE);                    gc.getLocation(point, function (rs) {                        var addComp = rs.addressComponents;                        var address;                        if (addComp.province == addComp.city) {                            address = "中国" + addComp.city + addComp.district + addComp.street;                        } else {                            address = addComp.province + addComp.city + addComp.district + addComp.street;                        }                        var clickEventHtml = 'onclick="showRoute(\'{travel_id}\',\'{device_code}\',\'{start_time}\',\'{end_time}\');" style="cursor: pointer;" ';                        var clickEvent = clickEventHtml.format({                            device_code: data.travel.DEVICE_CODE,                            travel_id: data.travel.TRAVEL_ID,                            start_time: data.travel.START_TIME,                            end_time: ''                        });                        var speed = data.travel.CAR_SPEED;                        var fuelCode = $("#fuelCode").val();                        if (fuelCode != null && fuelCode != '') {                            speed = data.travel.GPS_SPEED;                        }                        var baseHtml = '<div class="mapMonitorBoxBorder mapMonitorBoxBorder-unselect" ' + clickEvent + ' style="height: 180px;margin: 10px auto; width: 95%;cursor: pointer;">' +                            '<div class="mapMonitorBox-edit" style="height: 180px;border: 1px solid green;">' +                            '	<div class="mapMonitorBoxTitle" style="background-color: green !important;">' +                            '	  <div class="mapMonitorBoxTitleText" style="padding: 0px !important;margin: 15px 0 0 5px !important; line-height:20px !important; width:auto !important;">行驶中</div>' +                            '	  <div class="mapMonitorBoxTitleText" style="padding: 0px !important;margin: 15px 10px 0 5px !important; line-height:20px !important; width:auto !important; float:right;">司机:' + getValue(data.travel.DRIVER_NAME) + '</div>' +                            '	</div>' +                            '	<div class="mapMonitorBoxContents" style=" min-height: 26px; line-height: 26px; margin-top: 8px;">' +                            '	  <div class="mapMonitorBoxContentSquare" style="width:95%"><div style="width: 100%;"><span><b>开始时间:</b>' + data.travel.START_TIME + '</span></div></div>' +                            '	</div>' +                            '	<div class="mapMonitorBoxContent" style=" height: 26px; line-height: 26px; margin-top: 8px;">' +                            '	  <div class="mapMonitorBoxContentSquare" style="width:42%"><div style="width: 100%;"><span><b>车速:</b>' + speed + '(km/h)</span></div></div>' +                            '	</div>' +                            '	<div class="mapMonitorBoxContents" style=" min-height: 26px; line-height: 26px; margin-top: 8px;">' +                            '	  <div class="mapMonitorBoxContentSquare" style="width:95%"><div style="width:100%;white-space:nowrap; text-overflow:ellipsis; -o-text-overflow:ellipsis; overflow: hidden;" title="' + address + '"><span><b>最新位置:</b>' + address + '</span></div></div>' +                            '	</div>' +                            '	<div class="mapMonitorBoxContents" style=" min-height: 26px; line-height: 26px; margin-top: 8px;">' +                            '	  <div class="mapMonitorBoxContentSquare" style="width:95%"><div style="width: 100%;"><span><b>定位时间:</b>' + data.travel.MACHINE_TIME + '</span></div></div>' +                            '	</div>' +                            '</div>' +                            '</div>';                        $("#behaviorListDiv").prepend(baseHtml);                        //点击事件                        $("#behaviorListDiv" + " .mapMonitorBoxBorder").click(function () {                            if (this.onclick) {                                $("#behaviorListDiv .mapMonitorBoxBorder-unselect").removeClass("mapMonitorBoxBorder-select");                                $(this).addClass("mapMonitorBoxBorder-select");                            }                        });                        //非外部链接进来的默认选中最新的一条轨迹                        if ($("#selected_travelId").val() == '') {                            $("#behaviorListDiv" + " .mapMonitorBoxBorder-unselect").first().click();                        }                    });                } else {                    if ($("#selected_travelId").val() == '') {                        $("#behaviorListDiv" + " .mapMonitorBoxBorder-unselect").first().click();                    }                }            } else {                alertMessage("显示轨迹出错，请联系管理员！", 0);            }        }    });}/** * 判断空值 * @param value * @returns */function getValue(value) {    return value == undefined || (!isNotNull(value)) ? '暂无' : value;}/** * 时间格式化 */function main_dateFormat() {    Date.prototype.format = function (format) {        var o = {            "M+": this.getMonth() + 1, // month            "d+": this.getDate(), // day            "h+": this.getHours(), // hour            "m+": this.getMinutes(), // minute            "s+": this.getSeconds(), // second            "q+": Math.floor((this.getMonth() + 3) / 3), // quarter            "S": this.getMilliseconds()            // millisecond        }        if (/(y+)/.test(format)) {            format = format.replace(RegExp.$1, (this.getFullYear() + "")                .substr(4 - RegExp.$1.length));        }        for (var k in o) {            if (new RegExp("(" + k + ")").test(format)) {                format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k]                    : ("00" + o[k]).substr(("" + o[k]).length));            }        }        return format;    };}function initSpeedChart() {    // 路径配置    require.config({        paths: {            'echarts': ctx + '/js/echarts',            'echarts/chart/pie': ctx + '/js/echarts'        }    });    // 使用    require(        [            'echarts',            'echarts/chart/gauge' // 使用柱状图就加载bar模块，按需加载        ],        function (ec) {            // 基于准备好的dom，初始化echarts图表            speedChart = ec.init(document.getElementById('main_speed'));            option = {                backgroundColor: 'white',                tooltip: {                    formatter: "{a} <br/>{b} : {c}"                },                toolbox: {                    show: true,                    feature: {                        mark: {show: false},                        restore: {show: false},                        saveAsImage: {show: false}                    }                },                series: [                    {                        name: '速度',                        type: 'gauge',                        min: 0,                        max: 200,                        splitNumber: 10,                        axisLine: {            // 坐标轴线                            lineStyle: {       // 属性lineStyle控制线条样式                                width: 10                            }                        },                        axisTick: {            // 坐标轴小标记                            length: 15,        // 属性length控制线长                            lineStyle: {       // 属性lineStyle控制线条样式                                color: 'auto'                            }                        },                        splitLine: {           // 分隔线                            length: 20,         // 属性length控制线长                            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式                                color: 'auto'                            }                        },                        title: {                            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE                                fontWeight: 'bolder',                                fontSize: 12,                                fontStyle: 'italic'                            }                        },                        detail: {                            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE                                fontWeight: 'bolder',                            }                        },                        data: [{value: 0, name: 'km/h'}]                    },                ]            };            // 为echarts对象加载数据            speedChart.setOption(option);        }    );}/** * 改变仪表盘的速度值 */function changeSpeed(speed) {    if (speedChart != undefined) {        var speedArr = new Array();        var speedJson = {};        speedJson = {value: speed, name: 'km/h'};        speedArr.push(speedJson);        var a_ption = speedChart.getOption();        a_ption.series[0].data = speedArr;        speedChart.setOption(a_ption, true);    }}/** * 隐藏仪表盘 */function hideSpeed() {    $("#main_box .hide").click(function () {        //隐藏仪表盘        $("#main_box").addClass("display");        $("#show_speed").removeClass("display");    })}//显示仪表盘function showSpeed() {    $("#show_speed").click(function () {        //隐藏仪表盘        $("#main_box").removeClass("display");        $("#show_speed").addClass("display");    })}function returnIndex() {    var url = ctx + '/resourcesManage/vehicleResources/index.do';    openTab('车辆管理', url);}function openTab(name, url) {    if (window.parent.$.fn.jerichoTab != undefined) {        window.location.href = ctx + '/resourcesManage/vehicleResources/index.do';    } else {        parent.location.reload();    }}