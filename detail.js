$(function(){	//时间控件	WdatePicker({eCont:'div1',dateFmt:'yyyy-MM-dd',onpicked:function(dp){changeTime(dp.cal.getDateStr());}});			//加载监控曲线	loadData();	})function changeTime(date){	$("#queryDate").val(date);	loadData();}//加载监控曲线function loadData(){	var query = serializeArrayByForm('queryForm');	$.ajax({		"type" : 'post',		"url" : ctx+ '/monitoring/temHumMonitoring/getMonitorDatas.do',		"dataType" : "json",		"data" : query,		"success" : function(resp) {			var html = '';			if(resp!=null&&resp.length>0){				for(var i=0;i<resp.length;i++){					html+='<div class="row-fluid">'+							  '<div style="text-align:center">'+								  '<div class="widget-content">'+								  	'<div id="monitor_'+i+'" style="height: 300px"></div>'+								  '</div>'+							  '</div>'+						  '</div>'				}				//添加Div				$("#monitors_div").html(html);				//显示曲线				var monitor_data = [];				var times = [];				for(var i=0;i<resp.length;i++){										monitor_data.length = 0;					times.length = 0;					var monitor = resp[i];					var maxValue = monitor.maxValue;					var minValue = monitor.minValue;										var data = monitor.ups;					if(data!=null&&data.length>0){						for(var j=0;j<data.length;j++){							times.push(dateFormat(data[j].upTime,'yyyy-MM-dd hh:mm:ss'));							var temJson = {};							var tem = data[j].value;							temJson = {y:tem};							monitor_data.push(temJson);							if(tem>maxValue){								maxValue = tem;							}							if(tem<minValue){								minValue = tem;							}						}					}					var typeName = '';					if(monitor.type==1){						typeName = '温度';					}else if(monitor.type==2){						typeName = '湿度';					}										var ysj_state='正常';					if(monitor.compressor==0){						ysj_state='异常';					}					//实例化曲线图					var monitor_chart = new Highcharts.Chart({						chart: { renderTo : 'monitor_'+i,backgroundColor: 'rgba(255, 255, 255, 0.3)'},					    colors:["blue"],						title: {					        text: '设备编号：'+monitor.externalCode+'		'+typeName+'监控范围：'+monitor.minValue+monitor.unit+'~'+monitor.maxValue+monitor.unit+' 监控时间:'+monitor.startHour+'~'+monitor.endHour+' 压缩机:'+ysj_state					    },						tooltip: {					           formatter: function () {					               return '<b>时间：' + this.x + '</b> <b>值：' + this.y+'</b>';					           }					       },							yAxis: {					        min: minValue,					        max: maxValue,							tickPixelInterval: 10 ,							gridLineWidth: 0,							title: {								enabled: false							},							plotLines: [									{   					                    color: 'red',					                    dashStyle: 'Solid',					                    width: 1.5,					                    value: monitor.minValue,  					                    zIndex: 5,										label: {											text: '告警值',											style: {												color: 'red',												fontWeight: 'bold'											}										}					               },{					                    color: 'red',					                    dashStyle: 'Solid',					                    width: 1.5,					                    value: monitor.maxValue,  					                    zIndex: 5,										label: {											text: '告警值',											style: {												color: 'red',												fontWeight: 'bold'											}										}					               }					             ]					       },						xAxis: {							labels: {								enabled: false							},							categories:times						},						legend:{							enabled: false						},						credits:{							enabled: false						},					       series: [{					           type: 'line',					           name: 'Observations',					           data: monitor_data,					           marker: {					               radius: 1					           }					       }]					   });				}			}		}	});}